1) DP Freight
  
  Step 1: OPT[i] = "min cost from day 1 to day i"
  Step 2: 
    Choose A: OPT[i] = r*s_i + OPT[i-1]
    Choose B: OPT[i] = 4c + OPT[i-4]
    Bellman equation: OPT[i] = 0 : i <= 0; min(r*s_i + OPT[i-1], 4c + OPT[i-4]) : otherwise






2) DP Astronomy
  
  Step 1: OPT[i] = "Max number of events observed until ith minute, given you observe ith event"

  Step 2: 
    can observe an event iff |d_j - d_i| <= |j - i|
    Bellman equation: 
      OPT[i] = max_{j : |d_j - d_i| <= |i - j|}(OPT[j]) + 1
      


Dynamic Programming
  define OPT table, i.e. what does OPT[i] represent


3) Network flow

 



1. 
a) True
b) False
c) False
d) False
e) False
f) True

2.
a) True
b) Forests in a Graph, Linearly Independent Vectors in a Vector space
c) False
d) False
e) True

3. 
a) Split the array on each of the partitions.
Perform mergesort on each partition of the array.
Concatenate the partitions of the array together.

b) SHould be big theta not big omega

c) 

4. 
a) 

5. 
a) c' = c_i + delta(Phi)

  Case 1: c' = 1 + 2 = O(1)
  Case 2: c' = (a + 1) + |2(a+1) - 2|D|| - |2a - |D|| = a+1 + 2 - a = O(1)

b) 
  Case 1: c' = 1 + |2(a-1) - |D|| - |2a - |D|| = 1 + 2 = O(1)
  Case 2: c' = (a+1) + |2(a-1) - |D|*2/3| - |2a - |D||
    = (a+1) + |2(a-1) - |D|*2/3| - |2|D|/3 - |D|| = O(1)


6. 
a) False
b) 

